{"ast":null,"code":"var _jsxFileName = \"/Users/johndoansimac/Documents/GitHub/Mod_4_Project/Mod-4-Frontend/src/components/SearchBar.js\";\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    margin: theme.spacing(1),\n    width: '50ch'\n  },\n  searchBar: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  submitButton: {\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    margin: theme.spacing(1),\n    width: '10ch'\n  }\n}));\n\nconst SearchBar = props => {\n  const classes = useStyles();\n  const [count, setCount] = React.useState(0);\n  const [decks, setDecks] = React.useState([]);\n  React.useEffect(() => {\n    const fetchDecks = () => {\n      fetch(`http://localhost:3001/decks`).then(res => res.json()).then(deckCollection => setDecks(deckCollection));\n    };\n\n    fetchDecks();\n  }, [count]);\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.searchBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: e => props.setTerm(e.currentTarget.value),\n    className: classes.form,\n    id: \"outlined-basic\",\n    label: \"Search Term ...\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    \"aria-label\": \"position\",\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    onChange: e => props.setCheck(e.currentTarget.value),\n    value: \"name\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }\n    }),\n    label: \"Name\",\n    labelPlacement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    onChange: e => props.setCheck(e.currentTarget.value),\n    value: \"type\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }\n    }),\n    label: \"Type\",\n    labelPlacement: \"bottom\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    onChange: e => props.setCheck(e.currentTarget.value),\n    value: \"text\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }\n    }),\n    label: \"Text\",\n    labelPlacement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Decks\"), /*#__PURE__*/React.createElement(Select // native value={state.age}\n  // onChange={handleChange}\n  , {\n    label: \"Deck Select\",\n    inputProps: {\n      name: 'age',\n      id: 'outlined-age-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, decks.map(deck => /*#__PURE__*/React.createElement(\"option\", {\n    onClick: e => console.log(deck.id),\n    value: deck.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 48\n    }\n  }, deck.name)))), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.filterCards,\n    className: classes.submitButton,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/johndoansimac/Documents/GitHub/Mod_4_Project/Mod-4-Frontend/src/components/SearchBar.js"],"names":["React","makeStyles","TextField","Checkbox","FormGroup","FormControlLabel","Grid","Container","Button","Select","InputLabel","FormControl","useStyles","theme","form","backgroundColor","borderRadius","margin","spacing","width","searchBar","paddingTop","paddingBottom","submitButton","SearchBar","props","classes","count","setCount","useState","decks","setDecks","useEffect","fetchDecks","fetch","then","res","json","deckCollection","e","setTerm","currentTarget","value","setCheck","name","id","map","deck","console","log","filterCards"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        margin: theme.spacing(1),\n        width: '50ch'\n    },\n    searchBar: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1)\n    },\n    submitButton: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        margin: theme.spacing(1),\n        width: '10ch'\n    }\n  }));\n\nconst SearchBar = (props) => {\n    const classes = useStyles();\n\n    const [ count, setCount ] = React.useState(0)\n    const [decks,setDecks] = React.useState([]);\n    React.useEffect(() => {\n        const fetchDecks = () => {\n            fetch(`http://localhost:3001/decks`)\n        .then(res=>res.json())\n        .then(deckCollection=> setDecks(deckCollection))\n        }\n        fetchDecks();\n    },[count]\n    )\n    return (\n        <Container maxWidth = 'lg'>\n            <form noValidate autoComplete=\"off\">\n                <Grid container spacing={1} className={classes.searchBar}>\n                    <TextField onChange={(e)=>props.setTerm(e.currentTarget.value)}className={classes.form} id=\"outlined-basic\" label=\"Search Term ...\" variant=\"outlined\" />\n                    <FormGroup aria-label=\"position\" row>\n                        <FormControlLabel onChange={(e)=>props.setCheck(e.currentTarget.value)}\n                        value=\"name\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Name\"\n                        labelPlacement=\"bottom\"\n                        />\n                        <FormControlLabel onChange={(e)=>props.setCheck(e.currentTarget.value)}\n                        value=\"type\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Type\"\n                        labelPlacement=\"bottom\"\n                        color='primary'\n                        />\n                        <FormControlLabel onChange={(e)=>props.setCheck(e.currentTarget.value)}\n                        value=\"text\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Text\"\n                        labelPlacement=\"bottom\"\n                        />\n                    </FormGroup>\n                    <FormControl variant=\"outlined\" className={classes.form}>\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Decks</InputLabel>\n                        <Select\n                            // native value={state.age}\n                            // onChange={handleChange}\n                        label=\"Deck Select\"\n                        inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-native-simple',\n                        }}\n                        >\n                            {decks.map(deck => <option onClick={(e)=>console.log(deck.id)} value={deck.id}>{deck.name}</option>)}\n                        </Select>\n                    </FormControl>\n                    <Button onClick={props.filterCards} className={classes.submitButton} variant=\"outlined\">Submit</Button>\n                </Grid>\n            </form>\n        </Container>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}