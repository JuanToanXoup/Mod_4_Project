{"ast":null,"code":"var _jsxFileName = \"/Users/johndoansimac/Documents/GitHub/Mod_4_Project/Mod-4-Frontend/src/containers/Search.js\";\nimport * as React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MagicCard from '../components/MagicCard';\nimport SearchBar from '../components/SearchBar';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor: '#778899',\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 250\n  }\n}));\n\nconst Search = props => {\n  const classes = useStyles();\n  const count = '';\n  const [cards, setCards] = React.useState([]);\n  const [filteredCards, setFilter] = React.useState([]);\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [nameCheck, setNameCheck] = React.useState(false);\n  const [textCheck, setTextCheck] = React.useState(false);\n  const [typeCheck, setTypeCheck] = React.useState(false);\n  const [blueCheck, setBlueCheck] = React.useState(false);\n  const [blackCheck, setBlackCheck] = React.useState(false);\n  const [greenCheck, setGreenCheck] = React.useState(false);\n  const [whiteCheck, setWhiteCheck] = React.useState(false);\n  const [redCheck, setRedCheck] = React.useState(false);\n  React.useEffect(() => {\n    const fetchCards = () => {\n      fetch(`http://localhost:3001/cards`).then(res => res.json()).then(cardCollection => setCards(cardCollection));\n    };\n\n    fetchCards();\n  }, [count]);\n\n  const filterCards = () => {\n    let filteredArray = cards;\n    let nameFilter = [];\n    let textFilter = [];\n    let typeFilter = [];\n    let blueFilter = [];\n    let blackFilter = [];\n    let greenFilter = [];\n    let whiteFilter = [];\n    let redFilter = [];\n\n    if (nameCheck) {\n      nameFilter = cards.filter(card => card.name.toLowerCase().includes(searchTerm.toLowerCase()));\n      filteredArray = filteredArray.filter(value => nameFilter.includes(value));\n    }\n\n    if (textCheck) {\n      textFilter = cards.filter(card => card.text !== null).filter(card => card.text.toLowerCase().includes(searchTerm.toLowerCase()));\n      filteredArray = filteredArray.filter(value => textFilter.includes(value));\n    }\n\n    if (typeCheck) {\n      typeFilter = cards.filter(card => card.type !== null).filter(card => card.cardtype.toLowerCase().includes(searchTerm.toLowerCase()));\n      filteredArray = filteredArray.filter(value => typeFilter.includes(value));\n    }\n\n    if (blueCheck) {\n      blueFilter = cards.filter(card => card.colors.includes(\"Blue\"));\n      filteredArray = filteredArray.filter(value => blueFilter.includes(value));\n    }\n\n    if (blackCheck) {\n      blackFilter = cards.filter(card => card.colors.includes(\"Black\"));\n      filteredArray = filteredArray.filter(value => blackFilter.includes(value));\n    }\n\n    if (greenCheck) {\n      greenFilter = cards.filter(card => card.colors.includes(\"Green\"));\n      filteredArray = filteredArray.filter(value => greenFilter.includes(value));\n    }\n\n    if (whiteCheck) {\n      whiteFilter = cards.filter(card => card.colors.includes(\"White\"));\n      filteredArray = filteredArray.filter(value => whiteFilter.includes(value));\n    }\n\n    if (redCheck) {\n      redFilter = cards.filter(card => card.colors.includes(\"Red\"));\n      filteredArray = filteredArray.filter(value => redFilter.includes(value));\n    }\n\n    setFilter(filteredArray);\n  };\n\n  const setTerm = term => {\n    console.log(term);\n    setSearchTerm(term);\n  };\n\n  const setCheck = checkbox => {\n    switch (checkbox) {\n      case 'name':\n        setNameCheck(!nameCheck);\n        break;\n\n      case 'text':\n        setTextCheck(!textCheck);\n        break;\n\n      case 'type':\n        setTypeCheck(!typeCheck);\n        break;\n\n      case 'blue':\n        setBlueCheck(!blueCheck);\n        break;\n\n      case 'black':\n        setBlackCheck(!blackCheck);\n        break;\n\n      case 'green':\n        setGreenCheck(!greenCheck);\n        break;\n\n      case 'white':\n        setWhiteCheck(!whiteCheck);\n        break;\n\n      case 'red':\n        setRedCheck(!redCheck);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    filterCards: filterCards,\n    setDeck: props.setDeck,\n    selectedDeck: props.selectedDeck,\n    setTerm: setTerm,\n    setCheck: setCheck,\n    className: classes.searchBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, filteredCards.map(card => /*#__PURE__*/React.createElement(Grid, {\n    onClick: () => props.addToDeck(card.id),\n    key: card.id,\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MagicCard, {\n    card: card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }))))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/johndoansimac/Documents/GitHub/Mod_4_Project/Mod-4-Frontend/src/containers/Search.js"],"names":["React","Container","Grid","makeStyles","MagicCard","SearchBar","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","backgroundColor","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Search","props","classes","count","cards","setCards","useState","filteredCards","setFilter","searchTerm","setSearchTerm","nameCheck","setNameCheck","textCheck","setTextCheck","typeCheck","setTypeCheck","blueCheck","setBlueCheck","blackCheck","setBlackCheck","greenCheck","setGreenCheck","whiteCheck","setWhiteCheck","redCheck","setRedCheck","useEffect","fetchCards","fetch","then","res","json","cardCollection","filterCards","filteredArray","nameFilter","textFilter","typeFilter","blueFilter","blackFilter","greenFilter","whiteFilter","redFilter","filter","card","name","toLowerCase","includes","value","text","type","cardtype","colors","setTerm","term","console","log","setCheck","checkbox","setDeck","selectedDeck","searchBar","map","addToDeck","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,WAAW,GAAG,GAApB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE;AADP,GAJ8B;AAOvCC,EAAAA,WAAW,EAAE;AACXH,IAAAA,OAAO,EAAE,MADE;AAEXI,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,cAAc,EAAE,UAHL;AAIXC,IAAAA,OAAO,EAAE,OAJE;AAKX,OAAGR,KAAK,CAACS,MAAN,CAAaN;AALL,GAP0B;AAcvCO,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEX,KAAK,CAACW,MAAN,CAAaC,MAAb,GAAsB,CADxB;AAENC,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BC;AAFmB,KAA9C;AAFN,GAd+B;AAqBvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAEvB,WADD;AAEXwB,IAAAA,KAAK,EAAG,eAAcxB,WAAY,KAFvB;AAGXe,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BK;AAFmB,KAA9C;AAHD,GArB0B;AA6BvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GA7B2B;AAgCvCC,EAAAA,gBAAgB,EAAE;AAChBxB,IAAAA,OAAO,EAAE;AADO,GAhCqB;AAmCvCyB,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAnCgC;AAsCvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXT,IAAAA,KAAK,EAAExB,WAHI;AAIXe,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BK;AAFO,KAAlC;AAJD,GAtC0B;AA+CvCS,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,QADK;AAEhBpB,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC,CAFI;AAMhBG,IAAAA,KAAK,EAAEtB,KAAK,CAACkC,OAAN,CAAc,CAAd,CANS;AAOhB,KAAClC,KAAK,CAACmC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5Bd,MAAAA,KAAK,EAAEtB,KAAK,CAACkC,OAAN,CAAc,CAAd;AADqB;AAPd,GA/CqB;AA0DvCG,EAAAA,YAAY,EAAErC,KAAK,CAACS,MAAN,CAAaN,OA1DY;AA2DvCmC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,SADV;AAEPX,IAAAA,QAAQ,EAAE,CAFH;AAGPY,IAAAA,MAAM,EAAE,OAHD;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GA3D8B;AAiEvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE3C,KAAK,CAACkC,OAAN,CAAc,CAAd,CADH;AAETU,IAAAA,aAAa,EAAE5C,KAAK,CAACkC,OAAN,CAAc,CAAd;AAFN,GAjE4B;AAqEvCW,EAAAA,KAAK,EAAE;AACLrC,IAAAA,OAAO,EAAER,KAAK,CAACkC,OAAN,CAAc,CAAd,CADJ;AAELhC,IAAAA,OAAO,EAAE,MAFJ;AAGLuC,IAAAA,QAAQ,EAAE,MAHL;AAILK,IAAAA,aAAa,EAAE;AAJV,GArEgC;AA2EvCC,EAAAA,WAAW,EAAE;AACXP,IAAAA,MAAM,EAAE;AADG;AA3E0B,CAAZ,CAAD,CAA5B;;AAgFA,MAAMQ,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,OAAO,GAAGnD,SAAS,EAAzB;AAEA,QAAMoD,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmB7D,KAAK,CAAC8D,QAAN,CAAe,EAAf,CAAzB;AACA,QAAM,CAACC,aAAD,EAAeC,SAAf,IAA4BhE,KAAK,CAAC8D,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BlE,KAAK,CAAC8D,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BpE,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BtE,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BxE,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4B1E,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8B5E,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8B9E,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BhF,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BlF,KAAK,CAAC8D,QAAN,CAAe,KAAf,CAAhC;AAIA9D,EAAAA,KAAK,CAACmF,SAAN,CAAgB,MAAM;AACpB,UAAMC,UAAU,GAAG,MAAM;AACvBC,MAAAA,KAAK,CAAE,6BAAF,CAAL,CACDC,IADC,CACIC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADT,EAEDF,IAFC,CAEIG,cAAc,IAAG5B,QAAQ,CAAC4B,cAAD,CAF7B;AAGD,KAJD;;AAKAL,IAAAA,UAAU;AACT,GAPH,EAOI,CAACzB,KAAD,CAPJ;;AAUA,QAAM+B,WAAW,GAAG,MAAI;AACtB,QAAIC,aAAa,GAAG/B,KAApB;AACA,QAAIgC,UAAU,GAAG,EAAjB;AAAqB,QAAIC,UAAU,GAAG,EAAjB;AACrB,QAAIC,UAAU,GAAG,EAAjB;AAAqB,QAAIC,UAAU,GAAG,EAAjB;AACrB,QAAIC,WAAW,GAAG,EAAlB;AAAsB,QAAIC,WAAW,GAAG,EAAlB;AACtB,QAAIC,WAAW,GAAG,EAAlB;AAAsB,QAAIC,SAAS,GAAG,EAAhB;;AACtB,QAAGhC,SAAH,EAAa;AACXyB,MAAAA,UAAU,GAAGhC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCvC,UAAU,CAACsC,WAAX,EAAjC,CAArB,CAAb;AACAZ,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIb,UAAU,CAACY,QAAX,CAAoBC,KAApB,CAA9B,CAAhB;AACD;;AACD,QAAGpC,SAAH,EAAa;AACXwB,MAAAA,UAAU,GAAGjC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACK,IAAL,KAAc,IAAnC,EAAyCN,MAAzC,CAAgDC,IAAI,IAAIA,IAAI,CAACK,IAAL,CAAUH,WAAV,GAAwBC,QAAxB,CAAiCvC,UAAU,CAACsC,WAAX,EAAjC,CAAxD,CAAb;AACAZ,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIZ,UAAU,CAACW,QAAX,CAAoBC,KAApB,CAA9B,CAAhB;AACD;;AACD,QAAGlC,SAAH,EAAa;AACXuB,MAAAA,UAAU,GAAGlC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAc,IAAnC,EAAyCP,MAAzC,CAAgDC,IAAI,IAAIA,IAAI,CAACO,QAAL,CAAcL,WAAd,GAA4BC,QAA5B,CAAqCvC,UAAU,CAACsC,WAAX,EAArC,CAAxD,CAAb;AACAZ,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIX,UAAU,CAACU,QAAX,CAAoBC,KAApB,CAA9B,CAAhB;AACD;;AACD,QAAGhC,SAAH,EAAa;AACXsB,MAAAA,UAAU,GAAGnC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACQ,MAAL,CAAYL,QAAZ,CAAqB,MAArB,CAArB,CAAb;AACAb,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIV,UAAU,CAACS,QAAX,CAAoBC,KAApB,CAA9B,CAAhB;AACD;;AACD,QAAG9B,UAAH,EAAc;AACZqB,MAAAA,WAAW,GAAGpC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACQ,MAAL,CAAYL,QAAZ,CAAqB,OAArB,CAArB,CAAd;AACAb,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIT,WAAW,CAACQ,QAAZ,CAAqBC,KAArB,CAA9B,CAAhB;AACD;;AACD,QAAG5B,UAAH,EAAc;AACZoB,MAAAA,WAAW,GAAGrC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACQ,MAAL,CAAYL,QAAZ,CAAqB,OAArB,CAArB,CAAd;AACAb,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIR,WAAW,CAACO,QAAZ,CAAqBC,KAArB,CAA9B,CAAhB;AACD;;AACD,QAAG1B,UAAH,EAAc;AACZmB,MAAAA,WAAW,GAAGtC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACQ,MAAL,CAAYL,QAAZ,CAAqB,OAArB,CAArB,CAAd;AACAb,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIP,WAAW,CAACM,QAAZ,CAAqBC,KAArB,CAA9B,CAAhB;AACD;;AACD,QAAGxB,QAAH,EAAY;AACVkB,MAAAA,SAAS,GAAGvC,KAAK,CAACwC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACQ,MAAL,CAAYL,QAAZ,CAAqB,KAArB,CAArB,CAAZ;AACAb,MAAAA,aAAa,GAAGA,aAAa,CAACS,MAAd,CAAqBK,KAAK,IAAIN,SAAS,CAACK,QAAV,CAAmBC,KAAnB,CAA9B,CAAhB;AACD;;AACDzC,IAAAA,SAAS,CAAE2B,aAAF,CAAT;AACD,GAvCD;;AAyCA,QAAMmB,OAAO,GAAIC,IAAD,IAAU;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA7C,IAAAA,aAAa,CAAC6C,IAAD,CAAb;AACH,GAHD;;AAKE,QAAMG,QAAQ,GAAIC,QAAD,IAAc;AAC7B,YAAOA,QAAP;AACE,WAAK,MAAL;AAAa/C,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACX;;AACF,WAAK,MAAL;AAAaG,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACX;;AACF,WAAK,MAAL;AAAaG,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACX;;AACF,WAAK,MAAL;AAAaG,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACX;;AACF,WAAK,OAAL;AAAcG,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACZ;;AACF,WAAK,OAAL;AAAcG,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACZ;;AACF,WAAK,OAAL;AAAcG,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACZ;;AACF,WAAK,KAAL;AAAYG,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACV;;AACF;AACE;AAlBJ;AAoBD,GArBD;;AAuBA,sBACE;AAAM,IAAA,SAAS,EAAEvB,OAAO,CAACZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACb,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEa,OAAO,CAACR,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEwC,WADf;AAEE,IAAA,OAAO,EAAEjC,KAAK,CAAC2D,OAFjB;AAGE,IAAA,YAAY,EAAE3D,KAAK,CAAC4D,YAHtB;AAIE,IAAA,OAAO,EAAEP,OAJX;AAKE,IAAA,QAAQ,EAAEI,QALZ;AAME,IAAA,SAAS,EAAExD,OAAO,CAAC4D,SANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIvD,aAAa,CAACwD,GAAd,CAAkBlB,IAAI,iBACpB,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAI5C,KAAK,CAAC+D,SAAN,CAAgBnB,IAAI,CAACoB,EAArB,CAAnB;AAA6C,IAAA,GAAG,EAAEpB,IAAI,CAACoB,EAAvD;AAA2D,IAAA,IAAI,MAA/D;AAAgE,IAAA,EAAE,EAAE,EAApE;AAAwE,IAAA,EAAE,EAAE,CAA5E;AAA+E,IAAA,EAAE,EAAE,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAY,IAAA,IAAI,EAAEpB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFJ,CATF,CAFJ,CADF;AAwBH,CAzHD;;AA2HA,eAAe7C,MAAf","sourcesContent":["import * as React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MagicCard from '../components/MagicCard'\nimport SearchBar from '../components/SearchBar'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, \n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor: '#778899',\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 250,\n  }\n}));\n\nconst Search = (props) => {\n  const classes = useStyles();\n\n  const count = ''\n  const [cards,setCards] = React.useState([]);\n  const [filteredCards,setFilter] = React.useState([]);\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [nameCheck, setNameCheck] = React.useState(false);\n  const [textCheck, setTextCheck] = React.useState(false);\n  const [typeCheck, setTypeCheck] = React.useState(false);\n  const [blueCheck, setBlueCheck] = React.useState(false);\n  const [blackCheck, setBlackCheck] = React.useState(false);\n  const [greenCheck, setGreenCheck] = React.useState(false);\n  const [whiteCheck, setWhiteCheck] = React.useState(false);\n  const [redCheck, setRedCheck] = React.useState(false);\n\n\n\n  React.useEffect(() => {\n    const fetchCards = () => {\n      fetch(`http://localhost:3001/cards`)\n    .then(res=>res.json())\n    .then(cardCollection=> setCards(cardCollection))\n    }\n    fetchCards();\n    },[count]\n  )\n\n  const filterCards = ()=>{\n    let filteredArray = cards;\n    let nameFilter = []; let textFilter = []\n    let typeFilter = []; let blueFilter = []\n    let blackFilter = []; let greenFilter = []\n    let whiteFilter = []; let redFilter = []\n    if(nameCheck){\n      nameFilter = cards.filter(card => card.name.toLowerCase().includes(searchTerm.toLowerCase()))\n      filteredArray = filteredArray.filter(value => nameFilter.includes(value))\n    }\n    if(textCheck){\n      textFilter = cards.filter(card => card.text !== null).filter(card => card.text.toLowerCase().includes(searchTerm.toLowerCase()))\n      filteredArray = filteredArray.filter(value => textFilter.includes(value))\n    }\n    if(typeCheck){\n      typeFilter = cards.filter(card => card.type !== null).filter(card => card.cardtype.toLowerCase().includes(searchTerm.toLowerCase()))\n      filteredArray = filteredArray.filter(value => typeFilter.includes(value))\n    }\n    if(blueCheck){\n      blueFilter = cards.filter(card => card.colors.includes(\"Blue\"))\n      filteredArray = filteredArray.filter(value => blueFilter.includes(value))\n    }\n    if(blackCheck){\n      blackFilter = cards.filter(card => card.colors.includes(\"Black\"))\n      filteredArray = filteredArray.filter(value => blackFilter.includes(value))\n    }\n    if(greenCheck){\n      greenFilter = cards.filter(card => card.colors.includes(\"Green\"))\n      filteredArray = filteredArray.filter(value => greenFilter.includes(value))\n    }\n    if(whiteCheck){\n      whiteFilter = cards.filter(card => card.colors.includes(\"White\"))\n      filteredArray = filteredArray.filter(value => whiteFilter.includes(value))\n    }\n    if(redCheck){\n      redFilter = cards.filter(card => card.colors.includes(\"Red\"))\n      filteredArray = filteredArray.filter(value => redFilter.includes(value))\n    }\n    setFilter( filteredArray )\n  }\n\n  const setTerm = (term) => {\n      console.log(term)\n      setSearchTerm(term)\n  }\n\n    const setCheck = (checkbox) => {\n      switch(checkbox){\n        case 'name': setNameCheck(!nameCheck)\n          break;\n        case 'text': setTextCheck(!textCheck)\n          break;\n        case 'type': setTypeCheck(!typeCheck)\n          break;\n        case 'blue': setBlueCheck(!blueCheck)\n          break;\n        case 'black': setBlackCheck(!blackCheck)\n          break;\n        case 'green': setGreenCheck(!greenCheck)\n          break;\n        case 'white': setWhiteCheck(!whiteCheck)\n          break;\n        case 'red': setRedCheck(!redCheck)\n          break;\n        default:\n          break;\n      }\n    }\n\n    return (\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <SearchBar \n              filterCards={filterCards}\n              setDeck={props.setDeck} \n              selectedDeck={props.selectedDeck} \n              setTerm={setTerm} \n              setCheck={setCheck} \n              className={classes.searchBar}\n            />\n            <Grid container spacing={1}>\n              {\n                filteredCards.map(card => \n                  <Grid onClick={()=>props.addToDeck(card.id)} key={card.id} item xs={12} md={4} lg={3}>\n                    <MagicCard  card={card}/>\n                  </Grid>\n                )\n              }\n            </Grid>\n          </Container>\n      </main>\n    );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}