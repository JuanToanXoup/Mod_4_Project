{"ast":null,"code":"var _jsxFileName = \"/Users/johndoansimac/Documents/GitHub/Mod_4_Project/Mod-4-Frontend/src/components/Dashboard.js\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MainListItems from './MainListItems';\nimport DeckBox from '../containers/DeckBox';\nimport Search from '../containers/Search';\nimport DeckList from '../components/DeckList';\nimport Grid from '../components/Grid';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[900],\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 250\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const [tab, setTab] = React.useState('Decks');\n\n  const changeTab = tab => {\n    setTab(tab);\n  };\n\n  const count = '';\n  const [decks, setDecks] = React.useState([]);\n  const [currentDeckList, setCurrentDeckList] = React.useState([]);\n  const [selectedDeck, setDeck] = React.useState(1);\n  const magicBack = 'https://c1.scryfall.com/file/scryfall-card-backs/large/59/597b79b3-7d77-4261-871a-60dd17403388.jpg?1561757283';\n  const [imageShown, setImage] = React.useState(magicBack);\n  React.useEffect(() => {\n    const fetchDecks = () => {\n      fetch(`http://localhost:3001/decks`).then(res => res.json()).then(deckCollection => {\n        setDecks(deckCollection);\n      });\n    };\n\n    fetchDecks();\n  }, [count]);\n\n  const addToDeck = id => {\n    const decksUpdate = [...decks];\n    fetch('http://localhost:3001/deck_cards', {\n      method: 'POST',\n      body: JSON.stringify({\n        deck_id: selectedDeck,\n        card_id: id\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(deck_card => {\n      decks[selectedDeck - 1].cards.push(deck_card);\n      console.log(decks);\n      setDecks(decksUpdate);\n    });\n  };\n\n  const renderView = () => {\n    let showTab = '';\n\n    switch (tab) {\n      case \"Decks\":\n        showTab = /*#__PURE__*/React.createElement(DeckBox, {\n          decks: decks,\n          setTab: setTab,\n          setDeck: setDeck,\n          setCurrentDeckList: setCurrentDeckList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 31\n          }\n        });\n        break;\n\n      case \"Search\":\n        showTab = /*#__PURE__*/React.createElement(Search, {\n          setDeck: setDeck,\n          selectedDeck: selectedDeck,\n          addToDeck: addToDeck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 32\n          }\n        });\n        break;\n\n      case \"DeckList\":\n        showTab = /*#__PURE__*/React.createElement(DeckList, {\n          selectedDeck: selectedDeck,\n          decks: decks,\n          currentDeckList: currentDeckList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 34\n          }\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return showTab;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"absolute\",\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: toggleDrawer,\n    className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, tab))), /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainListItems, {\n    changeTab: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.cardImage,\n    src: imageShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, renderView()));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/johndoansimac/Documents/GitHub/Mod_4_Project/Mod-4-Frontend/src/components/Dashboard.js"],"names":["React","clsx","makeStyles","CssBaseline","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","MainListItems","DeckBox","Search","DeckList","Grid","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","backgroundColor","palette","mode","grey","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","open","setOpen","useState","toggleDrawer","tab","setTab","changeTab","count","decks","setDecks","currentDeckList","setCurrentDeckList","selectedDeck","setDeck","magicBack","imageShown","setImage","useEffect","fetchDecks","fetch","then","res","json","deckCollection","addToDeck","id","decksUpdate","method","body","JSON","stringify","deck_id","card_id","headers","deck_card","cards","push","console","log","renderView","showTab","cardImage"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAGA,MAAMC,WAAW,GAAG,GAApB;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,EADP,CACW;;AADX,GAJ8B;AAOvCC,EAAAA,WAAW,EAAE;AACXH,IAAAA,OAAO,EAAE,MADE;AAEXI,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,cAAc,EAAE,UAHL;AAIXC,IAAAA,OAAO,EAAE,OAJE;AAKX,OAAGR,KAAK,CAACS,MAAN,CAAaN;AALL,GAP0B;AAcvCO,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEX,KAAK,CAACW,MAAN,CAAaC,MAAb,GAAsB,CADxB;AAENC,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BC;AAFmB,KAA9C;AAFN,GAd+B;AAqBvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAEvB,WADD;AAEXwB,IAAAA,KAAK,EAAG,eAAcxB,WAAY,KAFvB;AAGXe,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BK;AAFmB,KAA9C;AAHD,GArB0B;AA6BvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GA7B2B;AAgCvCC,EAAAA,gBAAgB,EAAE;AAChBxB,IAAAA,OAAO,EAAE;AADO,GAhCqB;AAmCvCyB,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAnCgC;AAsCvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXT,IAAAA,KAAK,EAAExB,WAHI;AAIXe,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BK;AAFO,KAAlC;AAJD,GAtC0B;AA+CvCS,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,QADK;AAEhBpB,IAAAA,UAAU,EAAEb,KAAK,CAACc,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEhB,KAAK,CAACc,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAElB,KAAK,CAACc,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC,CAFI;AAMhBG,IAAAA,KAAK,EAAEtB,KAAK,CAACkC,OAAN,CAAc,CAAd,CANS;AAOhB,KAAClC,KAAK,CAACmC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5Bd,MAAAA,KAAK,EAAEtB,KAAK,CAACkC,OAAN,CAAc,CAAd;AADqB;AAPd,GA/CqB;AA0DvCG,EAAAA,YAAY,EAAErC,KAAK,CAACS,MAAN,CAAaN,OA1DY;AA2DvCmC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EACbvC,KAAK,CAACwC,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACIzC,KAAK,CAACwC,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CADJ,GAEI1C,KAAK,CAACwC,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CAJC;AAKPd,IAAAA,QAAQ,EAAE,CALH;AAMPe,IAAAA,MAAM,EAAE,OAND;AAOPC,IAAAA,QAAQ,EAAE;AAPH,GA3D8B;AAoEvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE9C,KAAK,CAACkC,OAAN,CAAc,CAAd,CADH;AAETa,IAAAA,aAAa,EAAE/C,KAAK,CAACkC,OAAN,CAAc,CAAd;AAFN,GApE4B;AAwEvCc,EAAAA,KAAK,EAAE;AACLxC,IAAAA,OAAO,EAAER,KAAK,CAACkC,OAAN,CAAc,CAAd,CADJ;AAELhC,IAAAA,OAAO,EAAE,MAFJ;AAGL0C,IAAAA,QAAQ,EAAE,MAHL;AAILK,IAAAA,aAAa,EAAE;AAJV,GAxEgC;AA8EvCC,EAAAA,WAAW,EAAE;AACXP,IAAAA,MAAM,EAAE;AADG;AA9E0B,CAAZ,CAAD,CAA5B;;AAmFA,MAAMQ,SAAS,GAAG,MAAI;AACpB,QAAMC,OAAO,GAAGrD,SAAS,EAAzB;AACA,QAAM,CAACsD,IAAD,EAAOC,OAAP,IAAkB1E,KAAK,CAAC2E,QAAN,CAAe,IAAf,CAAxB;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAGA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgB9E,KAAK,CAAC2E,QAAN,CAAe,OAAf,CAAtB;;AACA,QAAMI,SAAS,GAAIF,GAAD,IAAS;AACzBC,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAFD;;AAIA,QAAMG,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBlF,KAAK,CAAC2E,QAAN,CAAe,EAAf,CAAzB;AACA,QAAM,CAACQ,eAAD,EAAiBC,kBAAjB,IAAuCpF,KAAK,CAAC2E,QAAN,CAAe,EAAf,CAA7C;AACA,QAAM,CAACU,YAAD,EAAcC,OAAd,IAAyBtF,KAAK,CAAC2E,QAAN,CAAe,CAAf,CAA/B;AACA,QAAMY,SAAS,GAAG,+GAAlB;AACA,QAAM,CAACC,UAAD,EAAYC,QAAZ,IAAwBzF,KAAK,CAAC2E,QAAN,CAAeY,SAAf,CAA9B;AAEAvF,EAAAA,KAAK,CAAC0F,SAAN,CAAgB,MAAM;AAClB,UAAMC,UAAU,GAAG,MAAM;AACrBC,MAAAA,KAAK,CAAE,6BAAF,CAAL,CACHC,IADG,CACEC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADP,EAEHF,IAFG,CAEEG,cAAc,IAAG;AACrBd,QAAAA,QAAQ,CAACc,cAAD,CAAR;AACC,OAJC;AAKH,KAND;;AAOAL,IAAAA,UAAU;AACX,GATH,EASI,CAACX,KAAD,CATJ;;AAYA,QAAMiB,SAAS,GAAIC,EAAD,IAAM;AACtB,UAAMC,WAAW,GAAG,CAAC,GAAGlB,KAAJ,CAApB;AACAW,IAAAA,KAAK,CAAC,kCAAD,EAAoC;AACvCQ,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,OAAO,EAAEnB,YAAV;AAAwBoB,QAAAA,OAAO,EAAEP;AAAjC,OAAf,CAFiC;AAGvCQ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH8B,KAApC,CAAL,CAOCb,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMc,SAAS,IAAI;AACjB1B,MAAAA,KAAK,CAACI,YAAY,GAAC,CAAd,CAAL,CAAsBuB,KAAtB,CAA4BC,IAA5B,CAAiCF,SAAjC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAZ;AACAC,MAAAA,QAAQ,CAACiB,WAAD,CAAR;AACC,KAZH;AAcD,GAhBD;;AAkBA,QAAMa,UAAU,GAAG,MAAM;AACvB,QAAIC,OAAO,GAAG,EAAd;;AACA,YAAOpC,GAAP;AACE,WAAK,OAAL;AAAcoC,QAAAA,OAAO,gBAAG,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAEhC,KAAhB;AAAuB,UAAA,MAAM,EAAEH,MAA/B;AAAuC,UAAA,OAAO,EAAEQ,OAAhD;AAAyD,UAAA,kBAAkB,EAAEF,kBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACd;;AACA,WAAK,QAAL;AAAe6B,QAAAA,OAAO,gBAAG,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE3B,OAAjB;AAA0B,UAAA,YAAY,EAAED,YAAxC;AAAsD,UAAA,SAAS,EAAEY,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACf;;AACA,WAAK,UAAL;AAAiBgB,QAAAA,OAAO,gBAAG,oBAAC,QAAD;AAAU,UAAA,YAAY,EAAE5B,YAAxB;AAAsC,UAAA,KAAK,EAAEJ,KAA7C;AAAoD,UAAA,eAAe,EAAEE,eAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACjB;;AACA;AACA;AARF;;AAUA,WAAO8B,OAAP;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAEzC,OAAO,CAACnD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,SAAS,EAAEpB,IAAI,CAACuE,OAAO,CAAC1C,MAAT,EAAiB2C,IAAI,IAAID,OAAO,CAAChC,WAAjC,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEgC,OAAO,CAACjD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,kBAAW,aAHb;AAIE,IAAA,OAAO,EAAEqD,YAJX;AAKE,IAAA,SAAS,EAAE3E,IAAI,CACbuE,OAAO,CAAC5B,UADK,EAEb6B,IAAI,IAAID,OAAO,CAAC1B,gBAFH,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAaE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,IADZ;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,SAAS,EAAE0B,OAAO,CAACzB,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG8B,GAPH,CAbF,CAJF,CAFF,eA8BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,OAAO,EAAE;AACPT,MAAAA,KAAK,EAAEnE,IAAI,CAACuE,OAAO,CAACvB,WAAT,EAAsB,CAACwB,IAAD,IAASD,OAAO,CAACpB,gBAAvC;AADJ,KAFX;AAKE,IAAA,IAAI,EAAEqB,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,SAAS,EAAED,OAAO,CAAC/C,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEmD,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPF,eAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAE,aAAF;AAAgB,IAAA,SAAS,EAAEG,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,eAgBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAAC0C,SAAxB;AAAmC,IAAA,GAAG,EAAE1B,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBJ,CA9BF,eAmDE;AAAM,IAAA,SAAS,EAAEhB,OAAO,CAACd,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKsD,UAAU,EAFf,CAnDF,CADF;AA2DD,CA1HD;;AA4HA,eAAezC,SAAf","sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MainListItems from './MainListItems';\nimport DeckBox from '../containers/DeckBox';\nimport Search from '../containers/Search';\nimport DeckList from '../components/DeckList';\nimport Grid from '../components/Grid'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor:\n      theme.palette.mode === 'light'\n        ? theme.palette.grey[100]\n        : theme.palette.grey[900],\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 250,\n  },\n}));\n\nconst Dashboard = ()=>{\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const [tab, setTab] = React.useState('Decks');\n  const changeTab = (tab) => {\n    setTab(tab);\n  }\n\n  const count = ''\n  const [decks,setDecks] = React.useState([]);\n  const [currentDeckList,setCurrentDeckList] = React.useState([])\n  const [selectedDeck,setDeck] = React.useState(1)\n  const magicBack = 'https://c1.scryfall.com/file/scryfall-card-backs/large/59/597b79b3-7d77-4261-871a-60dd17403388.jpg?1561757283'\n  const [imageShown,setImage] = React.useState(magicBack)\n\n  React.useEffect(() => {\n      const fetchDecks = () => {\n          fetch(`http://localhost:3001/decks`)\n      .then(res=>res.json())\n      .then(deckCollection=> {\n        setDecks(deckCollection);\n        })\n      }\n      fetchDecks();\n    },[count]\n  )\n   \n  const addToDeck = (id)=>{\n    const decksUpdate = [...decks]\n    fetch('http://localhost:3001/deck_cards',{\n      method: 'POST',\n      body: JSON.stringify({deck_id: selectedDeck, card_id: id}),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n    .then(res => res.json())\n    .then(deck_card => {\n      decks[selectedDeck-1].cards.push(deck_card)\n      console.log(decks)\n      setDecks(decksUpdate)\n      }\n    )\n  }\n\n  const renderView = () => {\n    let showTab = ''\n    switch(tab){\n      case \"Decks\": showTab = <DeckBox decks={decks} setTab={setTab} setDeck={setDeck} setCurrentDeckList={setCurrentDeckList}/>\n      break;\n      case \"Search\": showTab = <Search setDeck={setDeck} selectedDeck={selectedDeck} addToDeck={addToDeck}/>\n      break;\n      case \"DeckList\": showTab = <DeckList selectedDeck={selectedDeck} decks={decks} currentDeckList={currentDeckList}/>\n      break;\n      default:\n      break;\n    }\n    return showTab\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {tab}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          < MainListItems changeTab={changeTab}/>\n        </List>\n        <Divider />\n          <Grid>\n            <img className={classes.cardImage} src={imageShown} />\n          </Grid>\n        </Drawer>\n      <main className={classes.content}>\n\n          {renderView()}\n          \n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}